#include "MiscFunctions.h"

json file_to_json(json& j, string filename){
    std::ifstream t(filename);
    std::string str;

    t.seekg(0, std::ios::end);
    str.reserve(t.tellg());
    t.seekg(0, std::ios::beg);

    str.assign((std::istreambuf_iterator<char>(t)), std::istreambuf_iterator<char>());
    try {
        j = json::parse(str);
    } catch(runtime_error& e) {
        printf("runtime_error error while loading from %s: %s\n", filename.c_str(), e.what());
        return;
    } catch(invalid_argument& e) {
        printf("invalid_argument error while loading from %s: %s\n", filename.c_str(), e.what());
        return;
    }
    return true;
}

vec3d random_point_in_range(double x, double y, double r_min, double r_max)
{
    double angle = (rand()%360) * M_PI / 180.0;
    double dist = rand()%int(r_max-r_min) + r_min;
    double px = dist * cos(angle) + x,
           py = dist * sin(angle) + y;
    return vec3d(px, py, 0);
}
