#include "Components.h"

unordered_map<string, vector<weak_ptr<Entity>>> CActionTarget::targets;
std::weak_ptr<Entity> CActionTarget::find_target(std::string target_name) {
    std::weak_ptr<Entity> closest;
    double dist = 0;
    auto opf = get_owner()->get<CTransform>();
    if(opf) {
        for(auto target: targets[target_name]) {
            if(!target.expired()) {
                auto pf = target.lock()->get<CTransform>();
                if(pf) {
                    if(closest.expired()) {
                        closest = target;
                        dist = opf->pos.dist(pf->pos);
                    } else {
                        double temp = opf->pos.dist(pf->pos);
                        if(temp < dist) {
                            closest = target;
                            dist = temp;
                        }
                    }
                }
            }
        }
    }
    return closest;
}
